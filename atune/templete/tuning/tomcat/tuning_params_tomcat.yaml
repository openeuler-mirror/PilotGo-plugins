project: tomcat
maxiterations: 1000
startworkload: 'root_tomcat/bin/startup.sh'
stopworkload: 'root_tomcat/bin/shutdown.sh; sleep 2'
object:
  -
    name: vm.drop_caches
    info:
      desc: Releases the cache. The cache is released each time the parameter is modified.
      get: sysctl -n vm.drop_caches
      set: sysctl -w vm.drop_caches=$value
      needrestart: 'false'
      type: discrete
      options: 
        - '1'
        - '2'
        - '3'
      dtype: string
  -
    name: net.ipv4.tcp_tw_reuse
    info:
      desc: The value 1 indicates that TIME-WAIT sockets can be used for new TCP connections, 
        and the value 0 indicates that TIME-WAIT sockets are disabled.
      get: sysctl -n net.ipv4.tcp_tw_reuse
      set: sysctl -w net.ipv4.tcp_tw_reuse=$value
      needrestart: 'false'
      type: discrete
      options:
        - '0'
        - '1'
        - '2'
      dtype: string
  -
    name: net.ipv4.tcp_fin_timeout
    info:
      desc: Maximum duration for a socket to remain in the FIN_WAIT_2 state.
      get: sysctl -n net.ipv4.tcp_fin_timeout
      set: sysctl -w net.ipv4.tcp_fin_timeout=$value
      needrestart: 'false'
      type: discrete
      scope:
        - 1
        - 120
      step: 1
      items: null
      dtype: int
  -
    name: net.ipv4.tcp_max_tw_buckets
    info:
      desc: Reduce the number of TIME_WAIT connections to prevent excessive TIME_WAIT
        connections from occupying network resources and increasing the latency. The
        default value is 2048. You are advised to change the value to 360000.
      get: sysctl -n net.ipv4.tcp_max_tw_buckets
      set: sysctl -w net.ipv4.tcp_max_tw_buckets=$value
      needrestart: 'false'
      type: discrete
      scope:
        - 32768
        - 1048576
      step: 32768
      items: null
      dtype: int
  -
    name: net.ipv4.ip_local_port_range
    info:
      desc: The range of available ports has been increased to prevent performance deterioration
        caused by continuous search of available ports for new connections when a large
        number of connections occupy ports.
      get: sysctl -n net.ipv4.ip_local_port_range
      set: sysctl -w net.ipv4.ip_local_port_range=$value
      needrestart: 'false'
      type: discrete
      options: 
        - "32768 60999"
        - "1024 65535"
        - "8192 65535"
      dtype: string
  -
    name: net.core.somaxconn
    info:
      desc: Defines the maximum length of the listening queue of each port in the system.
        This is a global parameter. The default value is 128. You are advised to change
        the value to 1024.
      get: sysctl -n net.core.somaxconn
      set: sysctl -w net.core.somaxconn=$value
      needrestart: 'false'
      type: discrete
      scope:
        - 128
        - 65536
      step: 128
      items: null
      dtype: int
  -
    name: net.ipv4.tcp_max_syn_backlog
    info:
      desc: Indicates the length of the SYN queue. A larger queue length can accommodate
        more network connections waiting for connections. The default value is 2048.
        You are advised to change the value to 8192.
      get: sysctl -n net.ipv4.tcp_max_syn_backlog
      set: sysctl -w net.ipv4.tcp_max_syn_backlog=$value
      needrestart: 'false'
      type: discrete
      scope:
        - 1024
        - 262144
      step: 1024
      items: null
      dtype: int
  -
    name: net.core.rmem_max
    info:
      desc: Maximum system socket read buffer The default value is 229376. You are advised
        to change the value to 16777216.
      get: sysctl -n net.core.rmem_max
      set: sysctl -w net.core.rmem_max=$value
      needrestart: 'false'
      type: discrete
      scope:
        - 1048576
        - 67108864
      step: 1048576
      items: null
      dtype: int
  -
    name: net.core.wmem_max
    info:
      desc: The maximum size of the system socket write buffer is increased to prevent
        buffer overflow caused by a large number of new connections. As a result, connections
        cannot be established. The default value is 229376. You are advised to change
        the value to 16777216.
      get: sysctl -n net.core.wmem_max
      set: sysctl -w net.core.wmem_max=$value
      needrestart: 'false'
      type: discrete
      scope:
        - 1048576
        - 67108864
      step: 1048576
      items: null
      dtype: int
  -
    name: ulimit.nofile
    info:
      desc: Maximum number of files that can be used by a user.
      get: ulimit -n
      set: ulimit -n $value
      needrestart: 'false'
      type: discrete
      scope:
        - 1024
        - 10240
      step: 1
      items: null
      dtype: int
  - 
    name: connector.maxThreads
    info:
      desc: Maximum number of threads requested by the customer
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/maxThreads/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/maxThreads/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(maxThreads=\").*(\")#maxThreads=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      scope:
        - 100
        - 2000
      step: 10
      items: null
      dtype: int
  -
    name: connector.minSpareThreads
    info:
      desc: Number of Socket threads created during Tomcat initialization
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/minSpareThreads/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/minSpareThreads/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(minSpareThreads=\").*(\")#minSpareThreads=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      scope:
        - 10
        - 200
      step: 5
      items: null
      dtype: int
  -
    name: connector.maxConnections
    info:
      desc: The maximum number of connections that the server will accept and process
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/maxConnections/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/maxConnections/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(maxConnections=\").*(\")#maxConnections=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      scope:
        - 8000
        - 15000
      step: 100
      items: null
      dtype: int
  -
    name: connector.enableLookups
    info:
      desc: Whether to backcheck the domain name
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/enableLookups/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/enableLookups/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(enableLookups=\").*(\")#enableLookups=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      options:
        - 'true'
        - 'false'
      items: null
      dtype: string
  -
    name: connector.acceptCount
    info:
      desc: Maximum number of listening port queues
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/acceptCount/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/acceptCount/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(acceptCount=\").*(\")#acceptCount=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      scope:
        - 50
        - 2000
      step: 50
      items: null
      dtype: int
  -
    name: connector.connectionTimeout
    info:
      desc: Network connection timeout
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/connectionTimeout/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/connectionTimeout/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(connectionTimeout=\").*(\")#connectionTimeout=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      scope:
        - 10000
        - 60000
      step: 500
      items: null
      dtype: int
  -
    name: connector.maxHttpHeaderSize
    info:
      desc: The maximum size of HTTP headers for requests and responses
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/maxHttpHeaderSize/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/maxHttpHeaderSize/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(maxHttpHeaderSize=\").*(\")#maxHttpHeaderSize=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      scope:
        - 1024
        - 102400
      step: 1024
      items: null
      dtype: int
  -
    name: connector.tcpNoDelay
    info:
      desc: If true, the server socket sets TCP_NO_DELAY
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/tcpNoDelay/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/tcpNoDelay/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(tcpNoDelay=\").*(\")#tcpNoDelay=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      options:
        - 'true'
        - 'false'
      items: null
      dtype: string
  -
    name: connector.compression
    info:
      desc: Whether to enable GZIP compression
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/compression/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/compression/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(compression=\").*(\")#compression=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      options:
        - 'off'
        - 'on'
        - 'force'
      items: null
      dtype: string
  -
    name: connector.compressionMinSize
    info:
      desc: The minimum value of data before compression
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/compressionMinSize/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/compressionMinSize/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(compressionMinSize=\").*(\")#compressionMinSize=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      scope:
        - 1024
        - 25600
      step: 512
      items: null
      dtype: int
  -
    name: connector.disableUploadTimeout
    info:
      desc: This flag allows the Servlet Container to use a different, longer connection timeout when a servlet executes
      get: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/disableUploadTimeout/=" $server_xml_dir | tail -n 1) && (sed -n "${end_line}p" $server_xml_dir | cut -d '=' -f 2) | cut -d '"' -f 2
      set: server_xml_dir=root_tomcat/conf/server.xml && begin_line=$(sed -n '/<Connector/=' $server_xml_dir | head -n 1) && end_line=$(sed -n "$begin_line,/disableUploadTimeout/=" $server_xml_dir | tail -n 1) && sed -r -i "$begin_line,${end_line} s#(disableUploadTimeout=\").*(\")#disableUploadTimeout=\"$value\"#1" $server_xml_dir
      needrestart: 'false'
      type: discrete
      options:
        - 'true'
        - 'false'
      items: null
      dtype: string
