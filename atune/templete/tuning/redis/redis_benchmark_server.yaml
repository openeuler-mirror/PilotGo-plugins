project: "redis_benchmark"
maxiterations: 100
startworkload: "systemctl start redis"
stopworkload: "ststemctl stop redis"
object : 
  -
    name : "redis.tcp-backlog"
    info :
        desc : "tcp backlog"
        get : cat /etc/redis.conf | grep tcp-backlog | awk '{print $2}'
        set : sed -i 's/tcp-backlog.*/tcp-backlog $value/g' /etc/redis.conf
        needrestart : "false"
        type : "continuous"
        scope :
          - 16
          - 65536
        dtype : "int" 
  -
    name : "redis.tcp-keepalive"
    info :
        desc : "closes the connection after holding for a few seconds"
        get : cat /etc/redis.conf | grep tcp-keepalive | awk '{print $2}'
        set : sed -i 's/tcp-keepalive.*/tcp-keepalive $value/g' /etc/redis.conf

        needrestart : "false"
        type : "continuous"
        scope :
          - 0
          - 3600
        dtype : "int" 
  -
    name : "redis.supervised"
    info :
        desc : "service supervise"
        get : cat /etc/redis.conf | grep supervised  | awk '{print $2}'
        set : sed -i 's/supervised .*/supervised  $value/g' /etc/redis.conf
        needrestart : "false"
        type : "discrete"
        options :
          - 'no'
          - 'upstart'
          - 'systemd'
          - 'auto'
        dtype : "string" 
  -
    name : "redis.databases"
    info :
        desc : "snumber of databases"
        get : cat /etc/redis.conf | grep databases | awk '{print $2}'
        set : sed -i 's/databases.*/databases $value/g' /etc/redis.conf
        needrestart : "false"
        type : "continuous"
        scope :
          - 0
          - 3600
        step : 1
        dtype : "int" 
  -
    name : "redis.rdbcompression"
    info :
        desc : "whether to compress character strings using LZF when backing up .rdb files"
        get : cat /etc/redis.conf | grep rdbcompression  | awk '{print $2}'
        set : sed -i 's/rdbcompression .*/rdbcompression  $value/g' /etc/redis.conf
        needrestart : "false"
        type : "discrete"
        options :
          - 'yes'
        dtype : "string" 
  -
  -
    name : "net.core.netdev_budget"
    info :
        desc : "Number of network packets processed in each software interrupt"
        get : "sysctl -n net.core.netdev_budget"
        set : "sysctl -w net.core.netdev_budget=$value"
        needrestart : "false"
        type : "discrete"
        scope :
          - 100
          - 1000
        step : 100
        items : 
        dtype : "int"
  -
    name : "net.core.rmem_max"
    info :
        desc : "Maximum system socket read buffer 
The default value is 229376. You are advised to change the value to 16777216."
        get : "sysctl -n net.core.rmem_max"
        set : "sysctl -w net.core.rmem_max=$value"
        needrestart : "false"
        type : "discrete"
        scope :
          - 1048576
          - 67108864
        step : 1048576
        items : 
        dtype : "int"
  -
    name : "net.core.somaxconn"
    info :
        desc : "Defines the maximum length of the listening queue of each port in the system. This is a global parameter. 
The default value is 128. You are advised to change the value to 1024."
        get : "sysctl -n net.core.somaxconn"
        set : "sysctl -w net.core.somaxconn=$value"
        needrestart : "false"
        type : "discrete"
        scope :
          - 128
          - 65536
        step : 128
        items : 
        dtype : "int"
  -
    name : "net.core.optmem_max"
    info :
        desc : "Maximum size of the buffer allowed by each socket(in bytes)."
        get : "sysctl -n net.core.optmem_max"
        set : "sysctl -w net.core.optmem_max=$value"
        needrestart : "false"
        type : "discrete"
        scope :
          - 20480
          - 204800
        step : 20480
        items : 
        dtype : "int"
  -
    name : "kernel.numa_balancing"
    info :
        desc : "Specifies whether to enable NUMA automatic balancing."
        get : "sysctl -n kernel.numa_balancing"
        set : "sysctl -w kernel.numa_balancing=$value"
        needrestart : "false"
        type : "discrete"
        options :
          - "0"
          - "1"
        dtype : "string"   
  -
    name : "redis hz"
    info :
        desc : "Redis checks for tasks to perform according to the specified 'hz' value."
        get : cat /etc/redis.conf | grep hz | sed -n '4p' | awk '{print $2}' 
        set : sed -i 's/^hz.*/hz $value/g' /etc/redis.conf
        needrestart : "false"
        type : "discrete"   
        scope :
            - 1
            - 500
        dtype : "int"
   - 
     name : "lowlog-log-slower-than"
     info :
         desc : "The Redis Slow Log is a system to log queries that exceeded a specified execution time"
         get : cat /etc/redis.conf | grep slowlog-log-slower-than | awk '{print $2}'
         set : sed -i  's/^slowlog-log-slower-than.*/slowlog-log-slower-than $value/g' /etc/redis.conf
         needrestart : "false"
         type : "discrete"
         scope :
             - 0
             - 10000
         dtype : "int"
   -
     name : "slowlog-max-len"
     info :
         desc : "Length of the slow log"
         get : cat /etc/redis.conf | grep slowlog-log-slower-than | awk '{print $2}'
         set : sed -i 's/^slowlog-max-len.*/slowlog-max-len $value/g' /etc/redis.conf
         needrestart : "false"
         type : "discrete"
         scope :
             - 0
             - 1024
         step : 64
         dtype : "int"
   - 
     name : "loglevel"
     info :
         desc : "Specify the server verbosity level"
         get : cat /etc/redis.conf | grep loglevel | awk '{print $2}'
         set : sed -i 's/^loglevel.*/loglevel $value/g' /etc/redis.conf
         needrestart : "false"
         type : "discrete"
         options : 
             - "debug"
             - "verbose"
             - "notice"
             - "warning"
         dtype : "string"